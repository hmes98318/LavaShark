"use strict";(self.webpackChunk_lavashark_website=self.webpackChunk_lavashark_website||[]).push([[1321],{6875:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"getting-started","title":"\u5165\u9580","description":"\u9019\u88e1\u6709\u4e00\u500b\u4f7f\u7528 discord.js v14 \u7684\u793a\u4f8b\u6559\u7a0b\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u8f03\u65e9\u7248\u672c\uff0c\u8acb\u66f4\u65b0\u5b83\u3002discord.js \u6307\u5357 \u63d0\u4f9b\u4e86\u8cc7\u6e90\u4f86\u5e6b\u52a9\u4f60\u9032\u884c\u66f4\u65b0\u904e\u7a0b\u3002","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/version-2.0.0/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/zh-TW/docs/2.0.0/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/hmes98318/LavaShark/blob/main/apps/website/versioned_docs/version-2.0.0/getting-started.md","tags":[],"version":"2.0.0","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"\u4f3a\u670d\u5668\u914d\u7f6e","permalink":"/zh-TW/docs/2.0.0/server-config"},"next":{"title":"FAQ \u5e38\u898b\u554f\u984c","permalink":"/zh-TW/docs/2.0.0/FAQ"}}');var s=r(4848),t=r(8453);const o={sidebar_position:3},l="\u5165\u9580",c={},i=[{value:"\u521d\u59cb\u5316 LavaShark \u548c discord.js \u51fd\u5f0f\u5eab",id:"\u521d\u59cb\u5316-lavashark-\u548c-discordjs-\u51fd\u5f0f\u5eab",level:3},{value:"\u8a3b\u518a\u4e8b\u4ef6",id:"\u8a3b\u518a\u4e8b\u4ef6",level:3},{value:"\u547d\u4ee4\u914d\u7f6e",id:"\u547d\u4ee4\u914d\u7f6e",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u5165\u9580",children:"\u5165\u9580"})}),"\n",(0,s.jsxs)(n.p,{children:["\u9019\u88e1\u6709\u4e00\u500b\u4f7f\u7528 discord.js v14 \u7684\u793a\u4f8b\u6559\u7a0b\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u8f03\u65e9\u7248\u672c\uff0c\u8acb\u66f4\u65b0\u5b83\u3002",(0,s.jsx)(n.a,{href:"https://discordjs.guide/",children:"discord.js \u6307\u5357"})," \u63d0\u4f9b\u4e86\u8cc7\u6e90\u4f86\u5e6b\u52a9\u4f60\u9032\u884c\u66f4\u65b0\u904e\u7a0b\u3002"]}),"\n",(0,s.jsx)(n.h3,{id:"\u521d\u59cb\u5316-lavashark-\u548c-discordjs-\u51fd\u5f0f\u5eab",children:"\u521d\u59cb\u5316 LavaShark \u548c discord.js \u51fd\u5f0f\u5eab"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const { Client, GatewayIntentBits } = require('discord.js');\r\nconst { LavaShark } = require('lavashark');\r\n\r\nconst TOKEN = 'your_token'; // Discord \u6a5f\u5668\u4eba token\r\nconst prefix = '-';         // \u6587\u5b57\u547d\u4ee4\u524d\u7db4\r\n\r\n\r\nconst client = new Client({\r\n    intents: [\r\n        GatewayIntentBits.Guilds,\r\n        GatewayIntentBits.GuildMessages,\r\n        GatewayIntentBits.MessageContent,\r\n        GatewayIntentBits.GuildVoiceStates,\r\n    ]\r\n});\r\n\r\nconst lavashark = new LavaShark({\r\n    nodes: [\r\n        {\r\n            id: 'Node 1',\r\n            hostname: 'localhost',\r\n            port: 2333,\r\n            password: 'youshallnotpass'\r\n        }\r\n    ],\r\n    sendWS: (guildId, payload) => { client.guilds.cache.get(guildId)?.shard.send(payload); }\r\n});\r\n\r\nclient.lavashark = lavashark;\r\nclient.login(TOKEN);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u8a3b\u518a\u4e8b\u4ef6",children:"\u8a3b\u518a\u4e8b\u4ef6"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// -- LavaShark \u4e8b\u4ef6 --\r\n\r\n// \u7576\u97f3\u8ecc\u958b\u59cb\u64ad\u653e\u6642\u89f8\u767c\r\nclient.lavashark.on('trackStart', (player, track) => {\r\n    const channel = client.channels.cache.get(player.textChannelId);\r\n    channel.send(`Now playing \\`${track.title}\\``);\r\n});\r\n\r\n// \u7576\u968a\u5217\u7d50\u675f\u6642\u89f8\u767c\r\nclient.lavashark.on('queueEnd', (player) => {\r\n    const channel = client.channels.cache.get(player.textChannelId);\r\n    channel.send(`Queue ended`);\r\n    player.destroy();\r\n});\r\n\r\n// \u6b64\u4e8b\u4ef6\u7528\u65bc\u6355\u6349 LavaShark \u4e0a\u767c\u751f\u7684\u4efb\u4f55\u932f\u8aa4\r\nclient.lavashark.on('error', (node, err) => {\r\n    console.error('[LavaShark]', `Error on node ${node.identifier}`, err.message);\r\n});\r\n\r\n\r\n// -- Client \u4e8b\u4ef6 --\r\n\r\nclient.on('ready', () => {\r\n    console.log('Ready!');\r\n\r\n    // \u555f\u52d5 LavaShark \u4e26\u9023\u63a5\u5230\u6240\u6709 lavalink \u7bc0\u9ede\r\n    client.lavashark.start(client.user.id);\r\n});\r\n\r\n// -- \u5fc5\u9700\u7684 --\r\nclient.on('raw', (packet) => client.lavashark.handleVoiceUpdate(packet));\r\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u547d\u4ee4\u914d\u7f6e",children:"\u547d\u4ee4\u914d\u7f6e"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"client.on('messageCreate', async message => {\r\n    if (message.author.bot) return;\r\n    if (message.content.indexOf(prefix) !== 0) return;\r\n\r\n\r\n    const args = message.content.slice(prefix.length).trim().split(/ +/g);\r\n    const command = args.shift().toLowerCase();\r\n\r\n    if (!message.member.voice.channel)\r\n        return message.reply('\u274c | You are not connected to an audio channel.');\r\n\r\n    if (message.guild.members.me.voice.channel && message.member.voice.channelId !== message.guild.members.me.voice.channelId)\r\n        return message.reply('\u274c | You are not on the same audio channel as me.');\r\n\r\n\r\n    console.log('--', command);\r\n\r\n    if (command === 'play') {\r\n        const track = args[0];\r\n\r\n        const res = await client.lavashark.search(track);\r\n\r\n        /**\r\n         * search loadType: playlist, search, track, empty, error\r\n         */\r\n\r\n        if (res.loadType === \"error\") {\r\n            console.log(`Search Error: ${res.exception.message}`);\r\n            return message.reply('\u274c | Not found music.');\r\n        }\r\n        else if (res.loadType === \"empty\") {\r\n            console.log(`Search Error: No matches (empty)`);\r\n            return message.reply('\u274c | No matches.');\r\n        }\r\n\r\n        // Creates the audio player\r\n        const player = client.lavashark.createPlayer({\r\n            guildId: message.guild.id,\r\n            voiceChannelId: message.member.voice.channelId,\r\n            textChannelId: message.channel.id,\r\n            selfDeaf: true\r\n        });\r\n\r\n        try {\r\n            await player.connect(); // Connects to the voice channel\r\n        } catch (error) {\r\n            console.log(error);\r\n            return message.reply({ content: `\u274c | I can't join audio channel.`, allowedMentions: { repliedUser: false } });\r\n        }\r\n\r\n        if (res.loadType === 'playlist') {\r\n            player.addTracks(res.tracks, message.author);\r\n\r\n            message.reply(`Playlist \\`${res.playlistInfo.name}\\` loaded!`);\r\n        }\r\n        else {\r\n            const track = res.tracks[0];\r\n            player.addTracks(res.tracks[0], message.author);\r\n            message.reply(`Added \\`${track.title}\\``);\r\n        }\r\n\r\n        if (!player.playing) await player.play();\r\n    }\r\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var a=r(6540);const s={},t=a.createContext(s);function o(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);
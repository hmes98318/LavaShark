"use strict";(self.webpackChunk_lavashark_website=self.webpackChunk_lavashark_website||[]).push([[606],{2080:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"server-config","title":"\u4f3a\u670d\u5668\u914d\u7f6e","description":"\u60a8\u9700\u8981\u4e0b\u8f09 Lavalink \u7bc0\u9ede (lavalink-devs/Lavalink) \u4e26\u904b\u884c\u5b83\uff0c\u6216\u8005\u4f7f\u7528\u5176\u4ed6\u516c\u5171\u7bc0\u9ede\u3002","source":"@site/i18n/zh-TW/docusaurus-plugin-content-docs/version-2.3.0/server-config.md","sourceDirName":".","slug":"/server-config","permalink":"/zh-TW/docs/server-config","draft":false,"unlisted":false,"editUrl":"https://github.com/hmes98318/LavaShark/blob/main/apps/website/versioned_docs/version-2.3.0/server-config.md","tags":[],"version":"2.3.0","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"LavaShark","permalink":"/zh-TW/docs/"},"next":{"title":"\u5165\u9580","permalink":"/zh-TW/docs/getting-started"}}');var t=n(4848),s=n(8453);const i={sidebar_position:2},o="\u4f3a\u670d\u5668\u914d\u7f6e",l={},c=[{value:"\u4f7f\u7528\u4e8c\u9032\u5236\u90e8\u7f72",id:"\u4f7f\u7528\u4e8c\u9032\u5236\u90e8\u7f72",level:2},{value:"\u4f7f\u7528Docker\u90e8\u7f72",id:"\u4f7f\u7528docker\u90e8\u7f72",level:2}];function u(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"\u4f3a\u670d\u5668\u914d\u7f6e",children:"\u4f3a\u670d\u5668\u914d\u7f6e"})}),"\n",(0,t.jsxs)(r.p,{children:["\u60a8\u9700\u8981\u4e0b\u8f09 Lavalink \u7bc0\u9ede (",(0,t.jsx)(r.a,{href:"https://github.com/lavalink-devs/Lavalink",children:"lavalink-devs/Lavalink"}),") \u4e26\u904b\u884c\u5b83\uff0c\u6216\u8005\u4f7f\u7528\u5176\u4ed6\u516c\u5171\u7bc0\u9ede\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u5982\u679c\u4f60\u9700\u8981\u516c\u5171\u7bc0\u9ede\uff0c\u53ef\u4ee5\u53c3\u8003\u4ee5\u4e0b\u5b58\u5132\u5eab\u3002"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/DarrenOfficial/lavalink-list",children:"DarrenOfficial/lavalink-list"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://github.com/brblacky/lavalink-list",children:"brblacky/lavalink-list"})}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"\u4f7f\u7528\u4e8c\u9032\u5236\u90e8\u7f72",children:"\u4f7f\u7528\u4e8c\u9032\u5236\u90e8\u7f72"}),"\n",(0,t.jsxs)(r.p,{children:["\u5f9e",(0,t.jsx)(r.a,{href:"https://repo.arbjerg.dev/artifacts/lavalink/",children:"\u4e0b\u8f09\u4f3a\u670d\u5668"}),"\u3001",(0,t.jsx)(r.a,{href:"https://github.com/lavalink-devs/Lavalink/releases",children:"GitHub releases"})," \u6216 ",(0,t.jsx)(r.a,{href:"https://github.com/lavalink-devs/Lavalink/actions",children:"GitHub actions"})," \u4e0b\u8f09\u4e8c\u9032\u5236\u6587\u4ef6\u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u5728\u60a8\u7684\u5de5\u4f5c\u76ee\u9304\u4e2d\u653e\u7f6e\u4e00\u500b ",(0,t.jsx)(r.code,{children:"application.yml"})," \u6587\u4ef6\u3002\uff08",(0,t.jsx)(r.a,{href:"https://github.com/lavalink-devs/Lavalink/blob/master/LavalinkServer/application.yml.example",children:"\u7bc4\u4f8b\u5728\u9019\u88e1"}),"\uff09"]}),"\n",(0,t.jsxs)(r.p,{children:["\u5f9e\u76f8\u540c\u76ee\u9304\u4e2d\u904b\u884c ",(0,t.jsx)(r.code,{children:"java -jar Lavalink.jar"})]}),"\n",(0,t.jsx)(r.h2,{id:"\u4f7f\u7528docker\u90e8\u7f72",children:"\u4f7f\u7528Docker\u90e8\u7f72"}),"\n",(0,t.jsxs)(r.p,{children:["Docker \u93e1\u50cf\u53ef\u4ee5\u5728",(0,t.jsx)(r.a,{href:"https://github.com/lavalink-devs/Lavalink/pkgs/container/lavalink",children:"Github packages"})," \u6216 ",(0,t.jsx)(r.a,{href:"https://hub.docker.com/r/fredboat/lavalink/",children:"Docker Hub"})," \u4e2d\u627e\u5230\u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u5b89\u88dd ",(0,t.jsx)(r.a,{href:"https://docs.docker.com/engine/install/",children:"Docker"})," & ",(0,t.jsx)(r.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})]}),"\n",(0,t.jsxs)(r.p,{children:["\u5efa\u7acb\u4e00\u500b\u540d\u70ba ",(0,t.jsx)(r.code,{children:"docker-compose.yml"})," \u7684\u6a94\u6848\uff0c\u4e26\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yml",children:"services:\r\n    lavalink:\r\n        image: fredboat/lavalink:4.0.8 # pin the image version to Lavalink v4\r\n        container_name: lavalink_v4\r\n        restart: unless-stopped\r\n        environment:\r\n            - _JAVA_OPTIONS=-Xmx6G # set Java options here\r\n            - SERVER_PORT=2333 # set lavalink server port\r\n            - LAVALINK_SERVER_PASSWORD=youshallnotpass # set password for lavalink\r\n        volumes:\r\n            - ./application.yml:/opt/Lavalink/application.yml # mount application.yml from the same directory or use environment variables\r\n            - ./plugins/:/opt/Lavalink/plugins/ # persist plugins between restarts, make sure to set the correct permissions (user: 322, group: 322)\r\n        networks:\r\n            - lavalink\r\n        expose:\r\n            - 2333 # lavalink exposes port 2333 to connect to for other containers (this is for documentation purposes only)\r\n        ports:\r\n            - 2333:2333 # you only need this if you want to make your lavalink accessible from outside of containers\r\nnetworks:\r\n    lavalink: # create a lavalink network you can add other containers to, to give them access to Lavalink\r\n        name: lavalink\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u5c07 ",(0,t.jsx)(r.code,{children:"application.yml"})," \u8207 ",(0,t.jsx)(r.code,{children:"docker-compose.yml"})," \u653e\u5728\u540c\u4e00\u76ee\u9304\u4e2d\u3002"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yml",children:'server: # REST and WS server\r\n  port: 2333\r\n  address: 0.0.0.0\r\nplugins:\r\n#  name: # Name of the plugin\r\n#    some_key: some_value # Some key-value pair for the plugin\r\n#    another_key: another_value\r\nlavalink:\r\n  plugins:\r\n      # https://github.com/lavalink-devs/youtube-source\r\n    - dependency: "dev.lavalink.youtube:youtube-plugin:1.11.5"\r\n      repository: "https://maven.lavalink.dev/releases"\r\n  server:\r\n    password: "youshallnotpass"\r\n    sources:\r\n      youtube: false\r\n      bandcamp: true\r\n      soundcloud: true\r\n      twitch: true\r\n      vimeo: true\r\n      http: true\r\n      local: false\r\n    filters: # All filters are enabled by default\r\n      volume: true\r\n      equalizer: true\r\n      karaoke: true\r\n      timescale: true\r\n      tremolo: true\r\n      vibrato: true\r\n      distortion: true\r\n      rotation: true\r\n      channelMix: true\r\n      lowPass: true\r\n    bufferDurationMs: 400 # The duration of the NAS buffer. Higher values fare better against longer GC pauses. Duration <= 0 to disable JDA-NAS. Minimum of 40ms, lower values may introduce pauses.\r\n    frameBufferDurationMs: 5000 # How many milliseconds of audio to keep buffered\r\n    opusEncodingQuality: 10 # Opus encoder quality. Valid values range from 0 to 10, where 10 is best quality but is the most expensive on the CPU.\r\n    resamplingQuality: LOW # Quality of resampling operations. Valid values are LOW, MEDIUM and HIGH, where HIGH uses the most CPU.\r\n    trackStuckThresholdMs: 10000 # The threshold for how long a track can be stuck. A track is stuck if does not return any audio data.\r\n    useSeekGhosting: true # Seek ghosting is the effect where whilst a seek is in progress, the audio buffer is read from until empty, or until seek is ready.\r\n    youtubePlaylistLoadLimit: 6 # Number of pages at 100 each\r\n    playerUpdateInterval: 5 # How frequently to send player updates to clients, in seconds\r\n    youtubeSearchEnabled: true\r\n    soundcloudSearchEnabled: true\r\n    gc-warnings: true\r\n    #ratelimit:\r\n      #ipBlocks: ["1.0.0.0/8", "..."] # list of ip blocks\r\n      #excludedIps: ["...", "..."] # ips which should be explicit excluded from usage by lavalink\r\n      #strategy: "RotateOnBan" # RotateOnBan | LoadBalance | NanoSwitch | RotatingNanoSwitch\r\n      #searchTriggersFail: true # Whether a search 429 should trigger marking the ip as failing\r\n      #retryLimit: -1 # -1 = use default lavaplayer value | 0 = infinity | >0 = retry will happen this numbers times\r\n    #youtubeConfig: # Required for avoiding all age restrictions by YouTube, some restricted videos still can be played without.\r\n      #email: "" # Email of Google account\r\n      #password: "" # Password of Google account\r\n    #httpConfig: # Useful for blocking bad-actors from ip-grabbing your music node and attacking it, this way only the http proxy will be attacked\r\n      #proxyHost: "localhost" # Hostname of the proxy, (ip or domain)\r\n      #proxyPort: 3128 # Proxy port, 3128 is the default for squidProxy\r\n      #proxyUser: "" # Optional user for basic authentication fields, leave blank if you don\'t use basic auth\r\n      #proxyPassword: "" # Password for basic authentication\r\n\r\nmetrics:\r\n  prometheus:\r\n    enabled: false\r\n    endpoint: /metrics\r\n\r\nsentry:\r\n  dsn: ""\r\n  environment: ""\r\n#  tags:\r\n#    some_key: some_value\r\n#    another_key: another_value\r\n\r\nlogging:\r\n  file:\r\n    path: ./logs/\r\n\r\n  level:\r\n    root: INFO\r\n    lavalink: INFO\r\n\r\n  request:\r\n    enabled: true\r\n    includeClientInfo: true\r\n    includeHeaders: false\r\n    includeQueryString: true\r\n    includePayload: true\r\n    maxPayloadLength: 10000\r\n\r\n\r\n  logback:\r\n    rollingpolicy:\r\n      max-file-size: 1GB\r\n      max-history: 30\n'})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var a=n(6540);const t={},s=a.createContext(t);function i(e){const r=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);
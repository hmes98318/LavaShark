"use strict";(self.webpackChunk_lavashark_website=self.webpackChunk_lavashark_website||[]).push([[1321],{3889:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=a(8168),r=(a(6540),a(5680));const s={sidebar_position:3},o="\u5165\u9580",l={unversionedId:"getting-started",id:"version-2.0.0/getting-started",title:"\u5165\u9580",description:"\u9019\u88e1\u6709\u4e00\u500b\u4f7f\u7528 discord.js v14 \u7684\u793a\u4f8b\u6559\u7a0b\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u8f03\u65e9\u7248\u672c\uff0c\u8acb\u66f4\u65b0\u5b83\u3002discord.js \u6307\u5357 \u63d0\u4f9b\u4e86\u8cc7\u6e90\u4f86\u5e6b\u52a9\u4f60\u9032\u884c\u66f4\u65b0\u904e\u7a0b\u3002",source:"@site/i18n/zh-TW/docusaurus-plugin-content-docs/version-2.0.0/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/zh-TW/docs/2.0.0/getting-started",draft:!1,editUrl:"https://github.com/hmes98318/LavaShark/blob/main/apps/website/versioned_docs/version-2.0.0/getting-started.md",tags:[],version:"2.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u4f3a\u670d\u5668\u914d\u7f6e",permalink:"/zh-TW/docs/2.0.0/server-config"},next:{title:"FAQ \u5e38\u898b\u554f\u984c",permalink:"/zh-TW/docs/2.0.0/FAQ"}},i={},c=[{value:"\u521d\u59cb\u5316 LavaShark \u548c discord.js \u51fd\u5f0f\u5eab",id:"\u521d\u59cb\u5316-lavashark-\u548c-discordjs-\u51fd\u5f0f\u5eab",level:3},{value:"\u8a3b\u518a\u4e8b\u4ef6",id:"\u8a3b\u518a\u4e8b\u4ef6",level:3},{value:"\u547d\u4ee4\u914d\u7f6e",id:"\u547d\u4ee4\u914d\u7f6e",level:3}],d={toc:c},p="wrapper";function u(e){let{components:n,...a}=e;return(0,r.yg)(p,(0,t.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u5165\u9580"},"\u5165\u9580"),(0,r.yg)("p",null,"\u9019\u88e1\u6709\u4e00\u500b\u4f7f\u7528 discord.js v14 \u7684\u793a\u4f8b\u6559\u7a0b\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u8f03\u65e9\u7248\u672c\uff0c\u8acb\u66f4\u65b0\u5b83\u3002",(0,r.yg)("a",{parentName:"p",href:"https://discordjs.guide/"},"discord.js \u6307\u5357")," \u63d0\u4f9b\u4e86\u8cc7\u6e90\u4f86\u5e6b\u52a9\u4f60\u9032\u884c\u66f4\u65b0\u904e\u7a0b\u3002  "),(0,r.yg)("h3",{id:"\u521d\u59cb\u5316-lavashark-\u548c-discordjs-\u51fd\u5f0f\u5eab"},"\u521d\u59cb\u5316 LavaShark \u548c discord.js \u51fd\u5f0f\u5eab"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const { Client, GatewayIntentBits } = require('discord.js');\nconst { LavaShark } = require('lavashark');\n\nconst TOKEN = 'your_token'; // Discord \u6a5f\u5668\u4eba token\nconst prefix = '-';         // \u6587\u5b57\u547d\u4ee4\u524d\u7db4\n\n\nconst client = new Client({\n    intents: [\n        GatewayIntentBits.Guilds,\n        GatewayIntentBits.GuildMessages,\n        GatewayIntentBits.MessageContent,\n        GatewayIntentBits.GuildVoiceStates,\n    ]\n});\n\nconst lavashark = new LavaShark({\n    nodes: [\n        {\n            id: 'Node 1',\n            hostname: 'localhost',\n            port: 2333,\n            password: 'youshallnotpass'\n        }\n    ],\n    sendWS: (guildId, payload) => { client.guilds.cache.get(guildId)?.shard.send(payload); }\n});\n\nclient.lavashark = lavashark;\nclient.login(TOKEN);\n")),(0,r.yg)("h3",{id:"\u8a3b\u518a\u4e8b\u4ef6"},"\u8a3b\u518a\u4e8b\u4ef6"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// -- LavaShark \u4e8b\u4ef6 --\n\n// \u7576\u97f3\u8ecc\u958b\u59cb\u64ad\u653e\u6642\u89f8\u767c\nclient.lavashark.on('trackStart', (player, track) => {\n    const channel = client.channels.cache.get(player.textChannelId);\n    channel.send(`Now playing \\`${track.title}\\``);\n});\n\n// \u7576\u968a\u5217\u7d50\u675f\u6642\u89f8\u767c\nclient.lavashark.on('queueEnd', (player) => {\n    const channel = client.channels.cache.get(player.textChannelId);\n    channel.send(`Queue ended`);\n    player.destroy();\n});\n\n// \u6b64\u4e8b\u4ef6\u7528\u65bc\u6355\u6349 LavaShark \u4e0a\u767c\u751f\u7684\u4efb\u4f55\u932f\u8aa4\nclient.lavashark.on('error', (node, err) => {\n    console.error('[LavaShark]', `Error on node ${node.identifier}`, err.message);\n});\n\n\n// -- Client \u4e8b\u4ef6 --\n\nclient.on('ready', () => {\n    console.log('Ready!');\n\n    // \u555f\u52d5 LavaShark \u4e26\u9023\u63a5\u5230\u6240\u6709 lavalink \u7bc0\u9ede\n    client.lavashark.start(client.user.id);\n});\n\n// -- \u5fc5\u9700\u7684 --\nclient.on('raw', (packet) => client.lavashark.handleVoiceUpdate(packet));\n\n")),(0,r.yg)("h3",{id:"\u547d\u4ee4\u914d\u7f6e"},"\u547d\u4ee4\u914d\u7f6e"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"client.on('messageCreate', async message => {\n    if (message.author.bot) return;\n    if (message.content.indexOf(prefix) !== 0) return;\n\n\n    const args = message.content.slice(prefix.length).trim().split(/ +/g);\n    const command = args.shift().toLowerCase();\n\n    if (!message.member.voice.channel)\n        return message.reply('\u274c | You are not connected to an audio channel.');\n\n    if (message.guild.members.me.voice.channel && message.member.voice.channelId !== message.guild.members.me.voice.channelId)\n        return message.reply('\u274c | You are not on the same audio channel as me.');\n\n\n    console.log('--', command);\n\n    if (command === 'play') {\n        const track = args[0];\n\n        const res = await client.lavashark.search(track);\n\n        /**\n         * search loadType: playlist, search, track, empty, error\n         */\n\n        if (res.loadType === \"error\") {\n            console.log(`Search Error: ${res.exception.message}`);\n            return message.reply('\u274c | Not found music.');\n        }\n        else if (res.loadType === \"empty\") {\n            console.log(`Search Error: No matches (empty)`);\n            return message.reply('\u274c | No matches.');\n        }\n\n        // Creates the audio player\n        const player = client.lavashark.createPlayer({\n            guildId: message.guild.id,\n            voiceChannelId: message.member.voice.channelId,\n            textChannelId: message.channel.id,\n            selfDeaf: true\n        });\n\n        try {\n            await player.connect(); // Connects to the voice channel\n        } catch (error) {\n            console.log(error);\n            return message.reply({ content: `\u274c | I can't join audio channel.`, allowedMentions: { repliedUser: false } });\n        }\n\n        if (res.loadType === 'playlist') {\n            player.addTracks(res.tracks, message.author);\n\n            message.reply(`Playlist \\`${res.playlistInfo.name}\\` loaded!`);\n        }\n        else {\n            const track = res.tracks[0];\n            player.addTracks(res.tracks[0], message.author);\n            message.reply(`Added \\`${track.title}\\``);\n        }\n\n        if (!player.playing) await player.play();\n    }\n});\n")))}u.isMDXComponent=!0},5680:(e,n,a)=>{a.d(n,{xA:()=>d,yg:()=>m});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),c=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},d=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),g=r,m=p["".concat(i,".").concat(g)]||p[g]||u[g]||s;return a?t.createElement(m,o(o({ref:n},d),{},{components:a})):t.createElement(m,o({ref:n},d))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=g;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"}}]);